/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.maccount.module.domain.db.jooq.generated.tables.records;


import io.surati.gap.maccount.module.domain.db.jooq.generated.tables.MaWarrantBundled;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaWarrantBundledRecord extends UpdatableRecordImpl<MaWarrantBundledRecord> implements Record3<Long, Short, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ma_warrant_bundled.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ma_warrant_bundled.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ma_warrant_bundled.fiscal_year</code>.
     */
    public void setFiscalYear(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ma_warrant_bundled.fiscal_year</code>.
     */
    public Short getFiscalYear() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.ma_warrant_bundled.sub_bundle_id</code>.
     */
    public void setSubBundleId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ma_warrant_bundled.sub_bundle_id</code>.
     */
    public Long getSubBundleId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Short> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Short, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Short, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MaWarrantBundled.MA_WARRANT_BUNDLED.ID;
    }

    @Override
    public Field<Short> field2() {
        return MaWarrantBundled.MA_WARRANT_BUNDLED.FISCAL_YEAR;
    }

    @Override
    public Field<Long> field3() {
        return MaWarrantBundled.MA_WARRANT_BUNDLED.SUB_BUNDLE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Short component2() {
        return getFiscalYear();
    }

    @Override
    public Long component3() {
        return getSubBundleId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Short value2() {
        return getFiscalYear();
    }

    @Override
    public Long value3() {
        return getSubBundleId();
    }

    @Override
    public MaWarrantBundledRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MaWarrantBundledRecord value2(Short value) {
        setFiscalYear(value);
        return this;
    }

    @Override
    public MaWarrantBundledRecord value3(Long value) {
        setSubBundleId(value);
        return this;
    }

    @Override
    public MaWarrantBundledRecord values(Long value1, Short value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MaWarrantBundledRecord
     */
    public MaWarrantBundledRecord() {
        super(MaWarrantBundled.MA_WARRANT_BUNDLED);
    }

    /**
     * Create a detached, initialised MaWarrantBundledRecord
     */
    public MaWarrantBundledRecord(Long id, Short fiscalYear, Long subBundleId) {
        super(MaWarrantBundled.MA_WARRANT_BUNDLED);

        setId(id);
        setFiscalYear(fiscalYear);
        setSubBundleId(subBundleId);
    }
}
