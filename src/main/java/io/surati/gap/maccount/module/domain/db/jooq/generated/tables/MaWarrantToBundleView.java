/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.maccount.module.domain.db.jooq.generated.tables;


import io.surati.gap.maccount.module.domain.db.jooq.generated.Public;
import io.surati.gap.maccount.module.domain.db.jooq.generated.tables.records.MaWarrantToBundleViewRecord;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaWarrantToBundleView extends TableImpl<MaWarrantToBundleViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ma_warrant_to_bundle_view</code>
     */
    public static final MaWarrantToBundleView MA_WARRANT_TO_BUNDLE_VIEW = new MaWarrantToBundleView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MaWarrantToBundleViewRecord> getRecordType() {
        return MaWarrantToBundleViewRecord.class;
    }

    /**
     * The column <code>public.ma_warrant_to_bundle_view.no</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Integer> NO = createField(DSL.name("no"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.fiscal_year</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Short> FISCAL_YEAR = createField(DSL.name("fiscal_year"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.annual_amount_to_pay</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> ANNUAL_AMOUNT_TO_PAY = createField(DSL.name("annual_amount_to_pay"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.annual_amount_paid</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> ANNUAL_AMOUNT_PAID = createField(DSL.name("annual_amount_paid"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.annual_amount_left</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> ANNUAL_AMOUNT_LEFT = createField(DSL.name("annual_amount_left"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.is_split</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Boolean> IS_SPLIT = createField(DSL.name("is_split"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.type_id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> TYPE_ID = createField(DSL.name("type_id"), SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.date</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, LocalDate> DATE = createField(DSL.name("date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.reference</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> REFERENCE = createField(DSL.name("reference"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.internal_reference</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> INTERNAL_REFERENCE = createField(DSL.name("internal_reference"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.object</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> OBJECT = createField(DSL.name("object"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.place</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> PLACE = createField(DSL.name("place"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.amount</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> AMOUNT = createField(DSL.name("amount"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.deposit_date</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, LocalDate> DEPOSIT_DATE = createField(DSL.name("deposit_date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.entry_date</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, LocalDate> ENTRY_DATE = createField(DSL.name("entry_date"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.beneficiary_id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Long> BENEFICIARY_ID = createField(DSL.name("beneficiary_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.step_id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> STEP_ID = createField(DSL.name("step_id"), SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.author_id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Long> AUTHOR_ID = createField(DSL.name("author_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.worker_id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Long> WORKER_ID = createField(DSL.name("worker_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.status_id</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> STATUS_ID = createField(DSL.name("status_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.amount_paid</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> AMOUNT_PAID = createField(DSL.name("amount_paid"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.amount_left</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> AMOUNT_LEFT = createField(DSL.name("amount_left"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.beneficiary_name</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> BENEFICIARY_NAME = createField(DSL.name("beneficiary_name"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.beneficiary_abbreviated</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> BENEFICIARY_ABBREVIATED = createField(DSL.name("beneficiary_abbreviated"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.beneficiary_code</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> BENEFICIARY_CODE = createField(DSL.name("beneficiary_code"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.gross</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> GROSS = createField(DSL.name("gross"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.deduction</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, Double> DEDUCTION = createField(DSL.name("deduction"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.debit_account_pec</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> DEBIT_ACCOUNT_PEC = createField(DSL.name("debit_account_pec"), SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.credit_account_pec</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> CREDIT_ACCOUNT_PEC = createField(DSL.name("credit_account_pec"), SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.date_pec</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, LocalDate> DATE_PEC = createField(DSL.name("date_pec"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.title</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.section</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> SECTION = createField(DSL.name("section"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.chapter</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> CHAPTER = createField(DSL.name("chapter"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.sub_chapter</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> SUB_CHAPTER = createField(DSL.name("sub_chapter"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.line</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> LINE = createField(DSL.name("line"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.bundle</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> BUNDLE = createField(DSL.name("bundle"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.region</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> REGION = createField(DSL.name("region"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.ma_warrant_to_bundle_view.imputation</code>.
     */
    public final TableField<MaWarrantToBundleViewRecord, String> IMPUTATION = createField(DSL.name("imputation"), SQLDataType.VARCHAR(50), this, "");

    private MaWarrantToBundleView(Name alias, Table<MaWarrantToBundleViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private MaWarrantToBundleView(Name alias, Table<MaWarrantToBundleViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"ma_warrant_to_bundle_view\" as  SELECT wr.no,\n    wr.fiscal_year,\n    wr.annual_amount_to_pay,\n    wr.annual_amount_paid,\n    wr.annual_amount_left,\n    wr.is_split,\n    wr.id,\n    wr.type_id,\n    wr.date,\n    wr.reference,\n    wr.internal_reference,\n    wr.object,\n    wr.place,\n    wr.amount,\n    wr.deposit_date,\n    wr.entry_date,\n    wr.beneficiary_id,\n    wr.step_id,\n    wr.author_id,\n    wr.worker_id,\n    wr.status_id,\n    wr.amount_paid,\n    wr.amount_left,\n    wr.beneficiary_name,\n    wr.beneficiary_abbreviated,\n    wr.beneficiary_code,\n    wr.gross,\n    wr.deduction,\n    wr.debit_account_pec,\n    wr.credit_account_pec,\n    wr.date_pec,\n    wr.title,\n    wr.section,\n    wr.chapter,\n    wr.sub_chapter,\n    wr.line,\n    wr.bundle,\n    wr.region,\n    wr.imputation\n   FROM (gtp_annual_warrant_view wr\n     LEFT JOIN ma_warrant_bundled wrb ON (((wr.id = wrb.id) AND (wr.fiscal_year = wrb.fiscal_year))))\n  WHERE (wrb.id IS NULL);"));
    }

    /**
     * Create an aliased <code>public.ma_warrant_to_bundle_view</code> table reference
     */
    public MaWarrantToBundleView(String alias) {
        this(DSL.name(alias), MA_WARRANT_TO_BUNDLE_VIEW);
    }

    /**
     * Create an aliased <code>public.ma_warrant_to_bundle_view</code> table reference
     */
    public MaWarrantToBundleView(Name alias) {
        this(alias, MA_WARRANT_TO_BUNDLE_VIEW);
    }

    /**
     * Create a <code>public.ma_warrant_to_bundle_view</code> table reference
     */
    public MaWarrantToBundleView() {
        this(DSL.name("ma_warrant_to_bundle_view"), null);
    }

    public <O extends Record> MaWarrantToBundleView(Table<O> child, ForeignKey<O, MaWarrantToBundleViewRecord> key) {
        super(child, key, MA_WARRANT_TO_BUNDLE_VIEW);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MaWarrantToBundleView as(String alias) {
        return new MaWarrantToBundleView(DSL.name(alias), this);
    }

    @Override
    public MaWarrantToBundleView as(Name alias) {
        return new MaWarrantToBundleView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MaWarrantToBundleView rename(String name) {
        return new MaWarrantToBundleView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MaWarrantToBundleView rename(Name name) {
        return new MaWarrantToBundleView(name, null);
    }
}
