/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.maccount.module.domain.db.jooq.generated.tables.records;


import io.surati.gap.maccount.module.domain.db.jooq.generated.tables.MaData;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaDataRecord extends UpdatableRecordImpl<MaDataRecord> implements Record5<Long, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ma_data.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ma_data.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ma_data.bundle_id</code>.
     */
    public void setBundleId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ma_data.bundle_id</code>.
     */
    public Integer getBundleId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.ma_data.title_id</code>.
     */
    public void setTitleId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ma_data.title_id</code>.
     */
    public Integer getTitleId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.ma_data.section_id</code>.
     */
    public void setSectionId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ma_data.section_id</code>.
     */
    public Integer getSectionId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.ma_data.imputation</code>.
     */
    public void setImputation(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ma_data.imputation</code>.
     */
    public String getImputation() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MaData.MA_DATA.ID;
    }

    @Override
    public Field<Integer> field2() {
        return MaData.MA_DATA.BUNDLE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return MaData.MA_DATA.TITLE_ID;
    }

    @Override
    public Field<Integer> field4() {
        return MaData.MA_DATA.SECTION_ID;
    }

    @Override
    public Field<String> field5() {
        return MaData.MA_DATA.IMPUTATION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getBundleId();
    }

    @Override
    public Integer component3() {
        return getTitleId();
    }

    @Override
    public Integer component4() {
        return getSectionId();
    }

    @Override
    public String component5() {
        return getImputation();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getBundleId();
    }

    @Override
    public Integer value3() {
        return getTitleId();
    }

    @Override
    public Integer value4() {
        return getSectionId();
    }

    @Override
    public String value5() {
        return getImputation();
    }

    @Override
    public MaDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MaDataRecord value2(Integer value) {
        setBundleId(value);
        return this;
    }

    @Override
    public MaDataRecord value3(Integer value) {
        setTitleId(value);
        return this;
    }

    @Override
    public MaDataRecord value4(Integer value) {
        setSectionId(value);
        return this;
    }

    @Override
    public MaDataRecord value5(String value) {
        setImputation(value);
        return this;
    }

    @Override
    public MaDataRecord values(Long value1, Integer value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MaDataRecord
     */
    public MaDataRecord() {
        super(MaData.MA_DATA);
    }

    /**
     * Create a detached, initialised MaDataRecord
     */
    public MaDataRecord(Long id, Integer bundleId, Integer titleId, Integer sectionId, String imputation) {
        super(MaData.MA_DATA);

        setId(id);
        setBundleId(bundleId);
        setTitleId(titleId);
        setSectionId(sectionId);
        setImputation(imputation);
    }
}
